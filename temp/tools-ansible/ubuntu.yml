---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  tasks:
    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - snapd
          - zsh
          - vim
          - htop
          - curl
          - wget
          - ncdu
          - tree
          - apt-transport-https
          - ca-certificates
          - gnupg
          - python3-pip
          - make
          - git
          - git-flow
          - bash-completion
          - gnupg-agent
          - flameshot
          - fonts-hack
          - tilix
          - mlocate
          - krita
          - jq
          - mtr
          - vinagre
          - rdesktop
          - xrdp
          - terminator
          - vlc
          - cmatrix
          - libarchive-tools
          - unzip
    - block:
      - name: VIRTUALBOX | add vb secure key
        become: true
        apt_key:
          url: "{{ item }}"
          state: present
        with_items:
          - "https://www.virtualbox.org/download/oracle_vbox_2016.asc"
          - "https://www.virtualbox.org/download/oracle_vbox.asc"

      - name: VIRTUALBOX | add paket sources
        become: true
        apt_repository:
          repo: "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian {{ ansible_distribution_release }} contrib"
          state: present

      - name: VIRTUALBOX | install virtualbox
        become: true
        apt:
          name: "{{ item }}"
          state: present
          update_cache: yes
        with_items:
          - "linux-headers-{{ ansible_kernel }}"
          - dkms
          - build-essential
          - "virtualbox-6.1"
    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true
      - name: Installing Oh-My-zsh
        shell: >
          curl -o- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash
        when: ohmyzsh.rc != 0
        ignore_errors: true
      - name: Changing Default Shell to ZSH
        become: yes
        user: 
          name: '{{ ansible_user_id }}'
          shell: /bin/zsh 
      - name: Changing Default ZSH Theme to Agnoster
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="agnoster"'
      - name: Changing Default ZSH Theme to Bira
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="bira"'
      - name: Creating ZSH Completion folder
        file:
          path: /home/{{ ansible_user_id }}/.oh-my-zsh/completions
          state: directory
          mode: 0755
      - name: Adding autoload to compinit
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          line: 'autoload -U compinit && compinit'
          state: present
    - block:
      - name: Installing AWS CLI via pip3
        become: true
        pip:
          name: awscli
          executable: pip3
    - block:
      - name: Install apt-transport-https
        become: true
        ansible.builtin.apt:
          state: latest
          update_cache: true
      - name: Add Apt signing key
        become: true
        ansible.builtin.apt_key:
          url: "https://dl.google.com/linux/linux_signing_key.pub"
          state: present
      - name: Add repository into sources list
        become: true
        ansible.builtin.apt_repository:
          repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
          state: present
          filename: google-chrome
      - name: Install google-chrome-stable
        become: true
        ansible.builtin.apt:
          name: "google-chrome-stable"
          state: latest
          update_cache: true
    - block:
      - name: Installing Vagrant 2.2.19
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vagrant/2.2.19/vagrant_2.2.19_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
    - block:
      - name: Installing Terraform 0.15.0
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/0.15.0/terraform_0.15.0_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
      - name: Renaming terraform15 binary
        become: true
        command: mv /usr/local/bin/terraform /usr/local/bin/terraform15
      - name: Installing Terraform 1.1.6
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/1.1.6/terraform_1.1.6_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
    - block:
      - name: Install Microsoft Key
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present
      - name: Install VSCode Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main'
          state: present
          filename: vscode
      - name: Install Visual Studio Code
        become: true
        apt:
          name: code
      - name: Install Virtual Studio Code Extensions
        shell:
          cmd: code --install-extension '{{ item }}' 
        loop: 
          - ms-python.python
          - ms-azuretools.vscode-docker
          - bbenoist.vagrant
          - hashicorp.terraform
          - tfsec.tfsec
          - bbenoist.vagrant
          - gruntfuggly.todo-tree
          - njpwerner.autodocstring
          - eamodio.gitlens
          - golang.go
          - wholroyd.hcl
          - bierner.markdown-preview-github-styles
          - redhat.vscode-yaml
          - MS-vsliveshare.vsliveshare
          - ms-azuretools.vscode-docker
          - github.copilot
          - ms-toolsai.jupyter
          - ms-toolsai.jupyter-keymap
          - ms-kubernetes-tools.vscode-kubernetes-tools
          - ms-vsliveshare.vsliveshare
          - shd101wyy.markdown-preview-enhanced
          - mongodb.mongodb-vscode
          - ms-vscode-remote.remote-containers
          - redhat.vscode-yaml
    - block: 
      - name: Install Docker Key
        become: true
        apt_key:
          url: 'https://download.docker.com/linux/ubuntu/gpg'
          state: present
      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state: present
          filename: docker-ce
      - name: Install Docker
        become: true
        apt:
          name: docker-ce
      - name: Adding existing user to group Docker
        become: yes
        user: 
          name: '{{ ansible_user_id }}'
          groups: docker 
          append: yes
      - name: Install Docker-Compose 1.29.2
        become: true
        get_url:
          url: 'https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64'
          dest: '/usr/local/bin/docker-compose'
          mode: 755
      - name: Install Docker Machine Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/machine/v0.16.0/contrib/completion/bash/docker-machine.bash'
          dest: '/etc/bash_completion.d/docker-machine'
      - name: Install Docker-Compose Bash Completion 1.29.2
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/compose/1.29.2/contrib/completion/bash/docker-compose'
          dest: '/etc/bash_completion.d/docker-compose'
      - name: Install Docker-Compose and Docker Machine Zsh Completion
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^plugins='
          line: 'plugins=(git docker docker-compose)'
    - block:
      - name: Installing Kubectl 1.21.3 
        become: true
        get_url:    
          url: 'https://dl.k8s.io/release/v1.21.3/bin/linux/amd64/kubectl'
          dest: /usr/local/bin/kubectl
          mode: 755
      - name: Renaming kubectl121 binary
        become: true
        command: mv /usr/local/bin/kubectl /usr/local/bin/kubectl121

      - name: Installing Kubectl 1.23
        become: true
        get_url:    
          url: 'https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl'
          dest: /usr/local/bin/kubectl
          mode: 755
    - block:
      - name: Adding Longsleep/Golang Backports Repository
        become: true
        apt_repository:
          repo: 'ppa:longsleep/golang-backports'
      - name: Install Golang 
        become: true
        apt:
          name: golang-go
# OPTIONAL:
#  - PEEK - Lightweight Screen Recorder that can export as GIF
#  - OBS-STUDIO - Screen Recorder and Casting Software 
#  - Brave Browser - Secure web browser
#  - Ulauncher - Application Launcher
    - block:
      - name: Adding Peek Repository
        become: true
        apt_repository:
          repo: 'ppa:peek-developers/stable'
      - name: Install Peek
        become: true
        apt:
          name: peek
    - block:
      - name: Install obsproject Ubuntu Repo
        become: true
        apt_repository:
          repo: 'ppa:obsproject/obs-studio'
      - name: Install obs Studio
        become: true
        apt:
          name: obs-studio
    - block: 
      - name: Install Brave Key
        become: true
        apt_key:
          url: 'https://brave-browser-apt-release.s3.brave.com/brave-core.asc'
          state: present
      - name: Install Brave Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main'
          state: present
          filename: brave
      - name: Install Brave Browser
        become: true
        apt:
          name: brave-browser
    - block:
      - name: Adding Ulauncher Repository
        become: true
        apt_repository:
          repo: 'ppa:agornostal/ulauncher'
      - name: Install Ulauncher
        become: true
        apt:
          name: ulauncher
    - block:
      - name: Adding Telegram Repository
        become: true
        apt_repository:
          repo: 'ppa:atareao/telegram'
      - name: Install Telegram
        become: true
        apt:
          name: telegram
    - block:
      - name: Install "discord"
        command: snap install discord
        become: true
    - block:
      - name: Install "slack with option --classic"
        command: snap install slack --classic
        become: true
    - block:
      - name: Install "zoom-client"
        command: snap install zoom-client
        become: true
    - block:
      - name: Install "remmina"
        command: snap install remmina
        become: true
    - block:
      - name: Install "robo3t"
        command: snap install robo3t-snap
        become: true
    - block:
      - name: Install "TeamViewer"
        become: true
        apt:
          deb: https://download.teamviewer.com/download/linux/teamviewer_amd64.deb
    - block:
      - name:  nvm
        shell: >
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
        args:
          creates "{{ ansible_env.HOME }}/.nvm/nvm.sh"
